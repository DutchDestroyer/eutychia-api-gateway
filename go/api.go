/*
 * Test api for project
 *
 * This api is a test version to connect the backend and frontend
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// DefaultApiRouter defines the required methods for binding the api requests to a responses for the DefaultApi
// The DefaultApiRouter implementation should parse necessary information from the http request, 
// pass the data to a DefaultApiServicer to perform the required actions, then write the service results to the http response.
type DefaultApiRouter interface { 
	CreateNewAccount(http.ResponseWriter, *http.Request)
	DeleteAccountByID(http.ResponseWriter, *http.Request)
	GetAccountByID(http.ResponseWriter, *http.Request)
	GetGenericTestOfProject(http.ResponseWriter, *http.Request)
	GetProjectsOfAccount(http.ResponseWriter, *http.Request)
	GetTestsToPerformByAccount(http.ResponseWriter, *http.Request)
	LogInWithAccount(http.ResponseWriter, *http.Request)
	LogOutWithAccount(http.ResponseWriter, *http.Request)
	RefreshAccessToken(http.ResponseWriter, *http.Request)
	SendEmailForSignUp(http.ResponseWriter, *http.Request)
	SubmitAnswerToTest(http.ResponseWriter, *http.Request)
}


// DefaultApiServicer defines the api actions for the DefaultApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type DefaultApiServicer interface { 
	CreateNewAccount(context.Context, AccountCreation) (ImplResponse, error)
	DeleteAccountByID(context.Context, string) (ImplResponse, error)
	GetAccountByID(context.Context, string) (ImplResponse, error)
	GetGenericTestOfProject(context.Context, string, string) (ImplResponse, error)
	GetProjectsOfAccount(context.Context, string) (ImplResponse, error)
	GetTestsToPerformByAccount(context.Context, string, string) (ImplResponse, error)
	LogInWithAccount(context.Context, LoginAccount) (ImplResponse, error)
	LogOutWithAccount(context.Context, LogoutAccount) (ImplResponse, error)
	RefreshAccessToken(context.Context, RefreshDetails) (ImplResponse, error)
	SendEmailForSignUp(context.Context, SignUp) (ImplResponse, error)
	SubmitAnswerToTest(context.Context, string, string, GenericTestAnswers) (ImplResponse, error)
}
